# Generated by Django 5.2.6 on 2025-09-09 00:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tourism', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_sessions', models.IntegerField(default=0)),
                ('total_messages', models.IntegerField(default=0)),
                ('unique_users', models.IntegerField(default=0)),
                ('anonymous_sessions', models.IntegerField(default=0)),
                ('avg_response_time_ms', models.FloatField(blank=True, null=True)),
                ('avg_confidence_score', models.FloatField(blank=True, null=True)),
                ('helpful_responses', models.IntegerField(default=0)),
                ('not_helpful_responses', models.IntegerField(default=0)),
                ('top_provinces_mentioned', models.JSONField(blank=True, default=dict)),
                ('top_places_mentioned', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('assistant', 'Assistant Response'), ('system', 'System Message')], max_length=10)),
                ('content', models.TextField()),
                ('retrieved_context', models.JSONField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mentioned_places', models.ManyToManyField(blank=True, related_name='chat_mentions', to='tourism.place')),
                ('mentioned_provinces', models.ManyToManyField(blank=True, related_name='chat_mentions', to='tourism.province')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot.chatsession')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='FrequentlyAskedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', models.TextField()),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('view_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('related_places', models.ManyToManyField(blank=True, related_name='faqs', to='tourism.place')),
                ('related_provinces', models.ManyToManyField(blank=True, related_name='faqs', to='tourism.province')),
            ],
            options={
                'ordering': ['-view_count', 'question'],
            },
        ),
        migrations.CreateModel(
            name='ChatFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('helpful', 'Helpful'), ('not_helpful', 'Not Helpful'), ('incorrect', 'Incorrect Information'), ('incomplete', 'Incomplete Answer'), ('excellent', 'Excellent Response')], max_length=15)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='chatbot.chatmessage')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('message', 'user')},
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('place_info', 'Place Information'), ('cultural_info', 'Cultural Information'), ('historical_info', 'Historical Information'), ('travel_tips', 'Travel Tips'), ('local_customs', 'Local Customs'), ('transportation', 'Transportation Info'), ('accommodation', 'Accommodation Info'), ('food_culture', 'Food & Culture'), ('events', 'Events & Festivals'), ('general', 'General Information')], max_length=20)),
                ('embedding_vector', models.JSONField(blank=True, null=True)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('source_type', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('related_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_entries', to='tourism.place')),
                ('related_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_entries', to='tourism.province')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['content_type'], name='chatbot_kno_content_94bd77_idx'), models.Index(fields=['is_active'], name='chatbot_kno_is_acti_7d9d86_idx'), models.Index(fields=['related_place'], name='chatbot_kno_related_464883_idx'), models.Index(fields=['related_province'], name='chatbot_kno_related_c8ed58_idx')],
            },
        ),
    ]
