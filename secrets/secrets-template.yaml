# Kubernetes Secrets Template for MyGuide Application
# Copy this file to secrets.yaml and update with your actual values
# DO NOT commit secrets.yaml to version control

apiVersion: v1
kind: Secret
metadata:
  name: myguide-secrets
  namespace: default
type: Opaque
data:
  # Database credentials (base64 encoded)
  # echo -n 'your_db_password' | base64
  db-password: <BASE64_ENCODED_DB_PASSWORD>
  db-user: <BASE64_ENCODED_DB_USER>
  
  # Django secret key (base64 encoded)
  # python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())' | base64
  django-secret-key: <BASE64_ENCODED_DJANGO_SECRET_KEY>
  
  # Redis password (base64 encoded)
  redis-password: <BASE64_ENCODED_REDIS_PASSWORD>
  
  # Email configuration (base64 encoded)
  email-host-user: <BASE64_ENCODED_EMAIL_USER>
  email-host-password: <BASE64_ENCODED_EMAIL_PASSWORD>
  
  # JWT secrets (base64 encoded)
  jwt-secret: <BASE64_ENCODED_JWT_SECRET>
  
  # API keys (base64 encoded)
  openai-api-key: <BASE64_ENCODED_OPENAI_API_KEY>
  stripe-secret-key: <BASE64_ENCODED_STRIPE_SECRET_KEY>
  
  # SSL certificates (base64 encoded)
  # cat your-cert.crt | base64 -w 0
  ssl-cert: <BASE64_ENCODED_SSL_CERT>
  ssl-key: <BASE64_ENCODED_SSL_KEY>

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: myguide-config
  namespace: default
data:
  # Non-sensitive configuration
  DEBUG: "False"
  ALLOWED_HOSTS: "myguide.com,www.myguide.com"
  DATABASE_URL: "postgresql://user:password@postgres:5432/myguide"
  REDIS_URL: "redis://redis:6379/0"
  CELERY_BROKER_URL: "redis://redis:6379/0"
  CELERY_RESULT_BACKEND: "redis://redis:6379/0"
  
  # Email settings
  EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
  EMAIL_HOST: "smtp.gmail.com"
  EMAIL_PORT: "587"
  EMAIL_USE_TLS: "True"
  
  # Frontend settings
  REACT_APP_API_URL: "https://api.myguide.com"
  REACT_APP_ENVIRONMENT: "production"